;;; -*- Lisp -*-
(load "script-support")
(load-asdf)

(quit-on-error
 (setf asdf:*central-registry* '(*default-pathname-defaults*))
 (asdf:load-system 'test-module-pathnames)
 (flet ((submodule (module name)
          (find name (asdf:module-components module)
                :key #'asdf:component-name :test #'equal))
        (pathname-foo (x)
          (list (pathname-directory x) (pathname-name x) (pathname-type x))))
   (let* ((system (asdf:find-system "test-module-pathnames"))
          (level1 (submodule system "sources/level1"))
          (static (submodule level1 "level2/static.file"))
          (test-tmp (submodule level1 "test-tmp.cl")))
     (assert (member (pathname-foo (asdf:component-relative-pathname test-tmp))
                     '(((:relative) "test-tmp" "cl")
                       (nil "test-tmp" "cl")) :test 'equal)
             nil
             "Didn't get the name of test-tmp.cl right")
     (assert (equal
              (pathname-foo (asdf:component-relative-pathname static))
              '((:relative "level2") "static" "file"))
             nil
             "Didn't get the name of static.file right")))
 (assert (find-package :test-package) nil
         "package test-package not found")
 (assert (find-symbol (symbol-name '*file-tmp*) :test-package) nil
         "symbol `*file-tmp*` not found")
 (assert (symbol-value (find-symbol (symbol-name '*file-tmp*) :test-package))
         nil "symbol `*file-tmp*` has wrong value")

#| ; must be adapted to ABL
 (assert (probe-file (merge-pathnames
                      (make-pathname
                       :name "file1"
                       :type (pathname-type (compile-file-pathname "x"))
                       :directory '(:relative "sources" "level1"))))
         nil "compiled file not found")
|#

 (assert (find-symbol (symbol-name '*file-tmp2*) :test-package) nil
         "symbol `*file-tmp2*` not found")
 (assert (symbol-value (find-symbol (symbol-name '*file-tmp2*) :test-package))
         nil "symbol `*file-tmp2*` has wrong value")

#| ; must be adapted to ABL

 (assert (probe-file (merge-pathnames
                      (make-pathname
                       :name "file2"
                       :type (pathname-type (compile-file-pathname "x"))
                       :directory '(:relative "sources" "level1" "level2"))))
         nil "compiled file not found")
|#

)
