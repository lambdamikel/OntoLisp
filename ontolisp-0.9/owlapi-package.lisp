;;; -*- Mode: Lisp; Syntax: Ansi-Common-Lisp; Package: CL-USER; Base: 10 -*-

(in-package :cl-user)

;;;
;;;;  owlapi-package.lisp
;;;
;;;
;;; --------------------------------------------------------------------------------------
;;;
;;;   The Original Software is 
;;;   OntoLisp (NOSA): A Semantic Web Framework for OWL 2 and OWLlink in Common Lisp
;;;
;;;   Copyright (c) 2007-2010 Michael Wessel and Racer Systems GmbH & Co. KG 
;;;   All Rights Reserved.
;;;
;;;   Contributor(s): Michael Wessel  (mailto:michael_wessel@gmx.de
;;;                                    mailto:wessel@racer-systems.com) 
;;;
;;;   This program is licensed under the terms of the GNU Lesser General Public License
;;;   as published by the Free Software Foundation, version 2.1 of the License. Note
;;;   however that a preamble attached below also applies to this program.
;;;
;;;
;;; --------------------------------------------------------------------------------------
;;;
;;;   Preamble to the Gnu Lesser General Public License
;;;
;;;   Copyright (c) 2000 Franz Incorporated, Berkeley, CA 94704
;;;
;;;   The concept of the GNU Lesser General Public License version 2.1 ("LGPL") has been
;;;   adopted to govern the use and distribution of above-mentioned application. However,
;;;   the LGPL uses terminology that is more appropriate for a program written in C than
;;;   one written in Lisp. Nevertheless, the LGPL can still be applied to a Lisp program
;;;   if certain clarifications are made. This document details those clarifications.
;;;   Accordingly, the license for the open-source Lisp applications consists of this
;;;   document plus the LGPL. Wherever there is a conflict between this document and the
;;;   LGPL, this document takes precedence over the LGPL.
;;;
;;;   A "Library" in Lisp is a collection of Lisp functions, data and foreign modules.
;;;   The form of the Library can be Lisp source code (for processing by an interpreter)
;;;   or object code (usually the result of compilation of source code or built with some
;;;   other mechanisms). Foreign modules are object code in a form that can be linked
;;;   into a Lisp executable. When we speak of functions we do so in the most general way
;;;   to include, in addition, methods and unnamed functions. Lisp "data" is also a
;;;   general term that includes the data structures resulting from defining Lisp classes.
;;;   A Lisp application may include the same set of Lisp objects as does a Library, but
;;;   this does not mean that the application is necessarily a "work based on the Library"
;;;   it contains.
;;;
;;;   The Library consists of everything in the distribution file set before any
;;;   modifications are made to the files. If any of the functions or classes in the
;;;   Library are redefined in other files, then those redefinitions ARE considered a
;;;   work based on the Library. If additional methods are added to generic functions in
;;;   the Library, those additional methods are NOT considered a work based on the
;;;   Library. If Library classes are subclassed, these subclasses are NOT considered a
;;;   work based on the Library. If the Library is modified to explicitly call other
;;;   functions that are neither part of Lisp itself nor an available add-on module to
;;;   Lisp, then the functions called by the modified Library ARE considered a work based
;;;   on the Library. The goal is to ensure that the Library will compile and run without
;;;   getting undefined function errors.
;;;
;;;   It is permitted to add proprietary source code to the Library, but it must be done
;;;   in a way such that the Library will still run without that proprietary code present.
;;;   Section 5 of the LGPL distinguishes between the case of a library being dynamically
;;;   linked at runtime and one being statically linked at build time. Section 5 of the
;;;   LGPL states that the former results in an executable that is a "work that uses the
;;;   Library." Section 5 of the LGPL states that the latter results in one that is a
;;;   "derivative of the Library", which is therefore covered by the LGPL. Since Lisp only
;;;   offers one choice, which is to link the Library into an executable at build time, we
;;;   declare that, for the purpose applying the LGPL to the Library, an executable that
;;;   results from linking a "work that uses the Library" with the Library is considered a
;;;   "work that uses the Library" and is therefore NOT covered by the LGPL.
;;;
;;;   Because of this declaration, section 6 of LGPL is not applicable to the Library.
;;;   However, in connection with each distribution of this executable, you must also
;;;   deliver, in accordance with the terms and conditions of the LGPL, the source code
;;;   of Library (or your derivative thereof) that is incorporated into this executable. 
;;;
;;; --------------------------------------------------------------------------------------
;;;
;;;
;;;   Purpose: Defines the owlapi package
;;; 

(defpackage owlapi
  (:nicknames nosa)
  (:use
   
   #+:racer-server
   racer

   common-lisp
   
   #+:racer-server
   thematic-substrate 
   
   #+:racer-server
   nrql-symbols)

  (:export 

   #:*count*
   #:*demo*
   #:demo

   #:define-constant
   
   #:*ano-concept*
   #:*cur-reasoner*
   #:*default-reasoner*
   #:*default-reasoner-name*
   #:*reasoners*
   #:+old-owl2-namespace+
   #:+owl2-namespace+
   #:+owlapi-owl-bottom+
   #:+owlapi-owl-bottom-data-role+
   #:+owlapi-owl-bottom-object-role+
   #:+owlapi-owl-nothing+
   #:+owlapi-owl-thing+
   #:+owlapi-owl-top+
   #:+owlapi-owl-top-data-role+
   #:+owlapi-owl-top-object-role+
   #:<
   #:<=
   #:<>
   #:=
   #:=>
   #:>
   #:>=
   #:a
   #:all
   #:all-names
   #:an
   #:and
   #:|AnnnotationProperty|
   #:annotated-ax
   #:annotation
   #:annotation-property
   #:annotation-property-domain
   #:annotation-property-range
   #:annotation-property1
   #:annotation-property2
   #:annotation-role
   #:annotation-sub-property
   #:annotation-subject
   #:annotation-super-property
   #:annotation-value
   #:annotations
   #:at-least
   #:at-most
   #:auto-declare-datatype-properties-p
   #:ax
   #:ax-individual
   #:ax1
   #:ax2
   #:axiom
   #:axiom-id
   #:axioms
   #:axioms-equal-p
   #:axioms-told
   #:boolean<>
   #:boolean=
   #:c1
   #:c2
   #:can-be-unloaded-p
   #:|Class|
   #:cls
   #:cls-or-id
   #:clsc
   #:clsd
   #:d-all
   #:d-and
   #:d-at-least
   #:d-at-most
   #:d-base-type
   #:d-complement
   #:d-exactly
   #:d-filler
   #:d-literal
   #:d-or
   #:d-possible-values
   #:d-restriction
   #:d-some
   #:data-literal
   #:data-properties
   #:data-property
   #:data-property-domain
   #:data-property-range
   #:data-range
   #:data-sub-property
   #:data-super-property
   #:|DataProperty|
   #:datarange-slots-equal-p
   #:|Datatype|
   #:datatype-name
   #:|Declaration|
   #:declared-annotation-properties
   #:declared-concepts
   #:declared-data-properties
   #:declared-datatypes
   #:declared-individuals
   #:declared-object-properties
   #:defmethod1
   #:defun1
   #:description
   #:descriptions
   #:direct-entailed-p
   #:dispose-axiom
   #:dispose-axioms-p
   #:dispose-ontology
   #:divisible
   #:dont-keep-axioms-p
   #:ends-with-#-p
   #:ensure-ends-with-colon
   #:ensure-list
   #:ensure-string
   #:entailed-p
   #:entities
   #:entity
   #:equal
   #:exactly
   #:expand-prefix
   #:find-owl-axiom
   #:find-owl-ontology
   #:find-reasoner
   #:first-object-property
   #:for-all-pairs-holds-p
   #:from
   #:from-to
   #:get-all-ontologies
   #:get-annotation-axioms-for-axiom
   #:get-axioms
   #:get-axioms-in
   #:get-axioms-of-type-for
   #:get-concept-synonyms
   #:get-current-date
   #:get-current-id
   #:get-ontologies
   #:get-ontology-names
   #:get-prefix-postfix
   #:get-role-synonyms
   #:get-temp-ontology-name
   #:has-value
   #:id-to-object-table
   #:individual
   #:individuals
   #:inds
   #:|is-AddAxiom-p|
   #:is-default-prefix-p
   #:is-entity-p
   #:is-file-url-p
   #:is-http-url-p
   #:is-ontology-p
   #:|is-OWLAxiomChange-p|
   #:|is-OWLOntologyChange-p|
   #:is-reasoner-p
   #:|is-RemoveAxiom-p|
   #:|is-SetOntologyURI-p|
   #:is-url-p
   #:key-class
   #:key-data-properties
   #:key-object-properties
   #:load-axiom
   #:load-axioms
   #:load-ontology
   #:loaded-p
   #:lookup-mode
   #:make-uri
   #:max
   #:mht
   #:min
   #:name
   #:|NamedIndividual|
   #:namespace
   #:no
   #:not
   #:not-divisible
   #:notify-reasoner-role-is-used-as-annotation-property
   #:notify-reasoner-role-is-used-as-datatype-property
   #:obj
   #:object
   #:object-properties
   #:object-property
   #:object-property-chain
   #:object-property-domain
   #:object-property-range
   #:object-sub-property
   #:object-super-property
   #:|ObjectAllValuesFrom|
   #:|ObjectComplementOf|
   #:|ObjectExactCardinality|
   #:|ObjectExistsSelf|
   #:|ObjectHasSelf|
   #:|ObjectHasValue|
   #:|ObjectIntersectionOf|
   #:|ObjectInverseOf|
   #:|ObjectMaxCardinality|
   #:|ObjectMinCardinality|
   #:|ObjectOneOf|
   #:|ObjectProperty|
   #:|ObjectPropertyAssertion|
   #:|ObjectPropertyChain|
   #:|ObjectPropertyDomain|
   #:|ObjectPropertyRange|
   #:|ObjectSomeValuesFrom|
   #:|ObjectUnionOf|
   #:one-of
   #:ontologies
   #:|Ontology|
   #:ontology
   #:ontology-prefixes
   #:or
   #:|OWLAnnotationAssertionAxiom|
   #:|OWLAnnotationAssertionAxiom-p|
   #:|OWLAnnotationAxiom|
   #:|OWLAnnotationAxiom-p|
   #:|OWLAnnotationPropertyDomainAxiom|
   #:|OWLAnnotationPropertyDomainAxiom-p|
   #:|OWLAnnotationPropertyRangeAxiom|
   #:|OWLAnnotationPropertyRangeAxiom-p|
   #:|OWLAntiSymmetricObjectPropertyAxiom|
   #:owlapi-abox
   #:owlapi-add-prefix
   #:|OWLAPI-AddAxiom|
   #:|OWLAPI-addAxiom|
   #:|OWLAPI-AddAxioms|
   #:|OWLAPI-addAxioms|
   #:|OWLAPI-addPrefix|
   #:|OWLAPI-applyChanges|
   #:owlapi-auto-batch-add-axioms-to
   #:owlapi-auto-batch-remove-axioms-from
   #:|OWLAPI-autoAddAxiomsTo|
   #:|OWLAPI-autoApplyChanges|
   #:|OWLAPI-autoBatchAddAxiomsTo|
   #:|OWLAPI-autoBatchRemoveAxiomsFrom|
   #:|OWLAPI-autoRemoveAxiomsFrom|
   #:|OWLAPI-AxiomLoaded?|
   #:|OWLAPI-AxiomToID|
   #:owlapi-batch-remove-axioms-from
   #:owlapi-batch-synchronize
   #:|OWLAPI-batchSynchronize|
   #:|OWLAPI-classify|
   #:|OWLAPI-clearChanges|
   #:|OWLAPI-clearOntologies|
   #:|OWLAPI-clearRegistry|
   #:|OWLAPI-considerDeclarations|
   #:|OWLAPI-contains|
   #:owlapi-defmacro
   #:owlapi-defmethod
   #:owlapi-defun
   #:|OWLAPI-describeOntologies|
   #:|OWLAPI-describeOntology|
   #:|OWLAPI-describeReasoner|
   #:|OWLAPI-describeReasoners|
   #:owlapi-disable-auto-mode
   #:owlapi-disable-incremental-updates
   #:owlapi-disable-memory-saving-mode
   #:|OWLAPI-disableAutoMode|
   #:|OWLAPI-disableIncrementalUpdates|
   #:|OWLAPI-disableLookupMode|
   #:|OWLAPI-disableMemorySavingMode|
   #:|OWLAPI-disableSimplifiedProtocol|
   #:|OWLAPI-disableTransientAxiomMode|
   #:|OWLAPI-dispose|
   #:owlapi-dispose-reasoner
   #:|OWLAPI-disposeAxiom|
   #:|OWLAPI-disposeAxioms|
   #:|OWLAPI-disposeOntologies|
   #:|OWLAPI-disposeOntology|
   #:|OWLAPI-disposeReasoner|
   #:|OWLAPI-dontRegisterDeclaredEntities|
   #:|OWLAPI-dontRegisterReferencedEntities|
   #:owlapi-enable-incremental-updates
   #:owlapi-enable-memory-saving-mode
   #:|OWLAPI-enableIncrementalUpdates|
   #:|OWLAPI-enableLookupMode|
   #:|OWLAPI-enableMemorySavingMode|
   #:|OWLAPI-enableSimplifiedProtocol|
   #:|OWLAPI-enableTransientAxiomMode|
   #:|OWLAPI-exportOntology|
   #:|OWLAPI-exportReasoner|
   #:|OWLAPI-findIDFromObject|
   #:|OWLAPI-findObjectFromID|
   #:owlapi-get-axioms
   #:|OWLAPI-getAllOntologies|
   #:|OWLAPI-getAncestorClasses|
   #:|OWLAPI-getAncestorProperties|
   #:|OWLAPI-getAnnotationAxiomsForAxiom|
   #:|OWLAPI-getAutoDeclareDataProperties|
   #:|OWLAPI-getAutoOntology|
   #:|OWLAPI-getAxiomCounter|
   #:|OWLAPI-getAxioms|
   #:|OWLAPI-getAxiomsIn|
   #:|OWLAPI-getAxiomsOfType|
   #:|OWLAPI-getAxiomsOfTypeIn|
   #:|OWLAPI-getAxiomsPerOntology|
   #:|OWLAPI-getChanges|
   #:|OWLAPI-getCurrentReasoner|
   #:|OWLAPI-getDataPropertyRelationships|
   #:|OWLAPI-getDescendantClasses|
   #:|OWLAPI-getDescendantProperties|
   #:|OWLAPI-getDifferentIndividuals|
   #:|OWLAPI-getDomains|
   #:|OWLAPI-getEquivalentClasses|
   #:|OWLAPI-getEquivalentProperties|
   #:|OWLAPI-getInconsistentClasses|
   #:|OWLAPI-getIndividuals|
   #:|OWLAPI-getInverseProperties|
   #:|OWLAPI-getLoadedOntologies|
   #:|OWLAPI-getObjectPropertyRelationships|
   #:|OWLAPI-getOntologies|
   #:|OWLAPI-getOWLAnnotationAssertionAxiom|
   #:|OWLAPI-getOWLAnnotationPropertyDomainAxiom|
   #:|OWLAPI-getOWLAnnotationPropertyRangeAxiom|
   #:|OWLAPI-getOWLAsymmetricObjectPropertyAxiom|
   #:|OWLAPI-getOWLAxiomAnnotationAxiom|
   #:|OWLAPI-getOWLClassAssertionAxiom|
   #:|OWLAPI-getOWLDataPropertyAssertionAxiom|
   #:|OWLAPI-getOWLDataPropertyDomainAxiom|
   #:|OWLAPI-getOWLDataPropertyRangeAxiom|
   #:|OWLAPI-getOWLDataSubPropertyAxiom|
   #:|OWLAPI-getOWLDatatypeDefinitionAxiom|
   #:|OWLAPI-getOWLDeclarationAxiom|
   #:|OWLAPI-getOWLDifferentIndividualsAxiom|
   #:|OWLAPI-getOWLDisjointClassesAxiom|
   #:|OWLAPI-getOWLDisjointDataPropertiesAxiom|
   #:|OWLAPI-getOWLDisjointObjectPropertiesAxiom|
   #:|OWLAPI-getOWLDisjointUnionAxiom|
   #:|OWLAPI-getOWLEntityAnnotationAxiom|
   #:|OWLAPI-getOWLEquivalentClassesAxiom|
   #:|OWLAPI-getOWLEquivalentDataPropertiesAxiom|
   #:|OWLAPI-getOWLEquivalentObjectPropertiesAxiom|
   #:|OWLAPI-getOWLFunctionalDataPropertyAxiom|
   #:|OWLAPI-getOWLFunctionalObjectPropertyAxiom|
   #:|OWLAPI-getOWLHasKeyAxiom|
   #:|OWLAPI-getOWLImplicitDeclarationAxiom|
   #:|OWLAPI-getOWLImportsDeclarationAxiom|
   #:|OWLAPI-getOWLInverseFunctionalObjectPropertyAxiom|
   #:|OWLAPI-getOWLInverseObjectPropertiesAxiom|
   #:|OWLAPI-getOWLIrreflexiveObjectPropertyAxiom|
   #:|OWLAPI-getOWLNegativeDataPropertyAssertionAxiom|
   #:|OWLAPI-getOWLNegativeObjectPropertyAssertionAxiom|
   #:|OWLAPI-getOWLObjectPropertyAssertionAxiom|
   #:|OWLAPI-getOWLObjectPropertyChainSubPropertyAxiom|
   #:|OWLAPI-getOWLObjectPropertyDomainAxiom|
   #:|OWLAPI-getOWLObjectPropertyRangeAxiom|
   #:|OWLAPI-getOWLObjectSubPropertyAxiom|
   #:|OWLAPI-getOWLOntologyAnnotationAxiom|
   #:|OWLAPI-getOWLOntologyVersionDeclarationAxiom|
   #:|OWLAPI-getOWLPrefixDeclarationAxiom|
   #:|OWLAPI-getOWLReallyImplicitDeclarationAxiom|
   #:|OWLAPI-getOWLReflexiveObjectPropertyAxiom|
   #:|OWLAPI-getOWLSameIndividualsAxiom|
   #:|OWLAPI-getOWLSubAnnotationPropertyAxiom|
   #:|OWLAPI-getOWLSubAnnotationPropertyOfAxiom|
   #:|OWLAPI-getOWLSubClassAxiom|
   #:|OWLAPI-getOWLSymmetricObjectPropertyAxiom|
   #:|OWLAPI-getOWLTransitiveObjectPropertyAxiom|
   #:|OWLAPI-getPrefixes|
   #:|OWLAPI-getRanges|
   #:|OWLAPI-getReasoners|
   #:|OWLAPI-getRelatedIndividuals|
   #:|OWLAPI-getRelatedValues|
   #:|OWLAPI-getSameIndividuals|
   #:|OWLAPI-getSubClasses|
   #:|OWLAPI-getSubProperties|
   #:|OWLAPI-getSuperClasses|
   #:|OWLAPI-getSuperProperties|
   #:|OWLAPI-getTypes|
   #:|OWLAPI-hasDataPropertyRelationship|
   #:|OWLAPI-hasObjectPropertyRelationship|
   #:|OWLAPI-hasType|
   #:|OWLAPI-IDToAxiom|
   #:|OWLAPI-ignoreAnnotations|
   #:|OWLAPI-ignoreDeclarations|
   #:owlapi-import-ontology
   #:|OWLAPI-init|
   #:|OWLAPI-isAsymmetric|
   #:|OWLAPI-isClass|
   #:|OWLAPI-isClassified|
   #:|OWLAPI-isConsistent|
   #:|OWLAPI-isDefinedClass|
   #:|OWLAPI-isDefinedDataProperty|
   #:|OWLAPI-isDefinedIndividual|
   #:|OWLAPI-isDefinedObjectProperty|
   #:|OWLAPI-isDifferentIndividual|
   #:|OWLAPI-isEquivalentClass|
   #:|OWLAPI-isFunctional|
   #:|OWLAPI-isInverseFunctional|
   #:|OWLAPI-isIrreflexive|
   #:|OWLAPI-isRealised|
   #:|OWLAPI-isReflexive|
   #:|OWLAPI-isSameIndividual|
   #:|OWLAPI-isSatisfiable|
   #:|OWLAPI-isSubClassOf|
   #:|OWLAPI-isSymmetric|
   #:|OWLAPI-isTransitive|
   #:|OWLAPI-keepAnnotations|
   #:owlapi-load-ontology
   #:|OWLAPI-loadAxiom|
   #:|OWLAPI-loadAxioms|
   #:|OWLAPI-loadOntologies|
   #:|OWLAPI-loadOntology|
   #:|OWLAPI-manuallyApplyChanges|
   #:|OWLAPI-mergeOntologies|
   #:owlapi-new-ontology
   #:owlapi-new-reasoner
   #:|OWLAPI-newOntology|
   #:|OWLAPI-newReasoner|
   #:|OWLAPI-nextAxiomUseID|
   #:|OWLAPI-parse|
   #:|OWLAPI-parseNative|
   #:owlapi-parser-error
   #:|OWLAPI-readFunctionalOntologyDocument|
   #:|OWLAPI-readFunctionalOntologyFile|
   #:|OWLAPI-readOntology|
   #:|OWLAPI-readXMLOntologyDocument|
   #:|OWLAPI-readXMLOntologyFile|
   #:|OWLAPI-realize|
   #:owlapi-reasoner-name
   #:|OWLAPI-registerDeclaredEntities|
   #:|OWLAPI-registerLastAnswer|
   #:|OWLAPI-registerObject|
   #:|OWLAPI-registerReferencedEntities|
   #:|OWLAPI-reloadLoadedOntologies|
   #:|OWLAPI-RemoveAxiom|
   #:|OWLAPI-removeAxiom|
   #:|OWLAPI-RemoveAxioms|
   #:|OWLAPI-removeAxioms|
   #:|OWLAPI-removePrefix|
   #:|OWLAPI-resetAxiomCounter|
   #:|OWLAPI-restoreImage|
   #:owlapi-runtime-error
   #:|OWLAPI-saveOntology|
   #:|OWLAPI-setAutoDeclareDataProperties|
   #:|OWLAPI-setAxiomCounter|
   #:|OWLAPI-setCurrentReasoner|
   #:|OWLAPI-SetOntologyURI|
   #:|OWLAPI-setReturnPolicy|
   #:|OWLAPI-storeImage|
   #:owlapi-tbox
   #:|OWLAPI-unloadAxiom|
   #:|OWLAPI-unloadAxioms|
   #:|OWLAPI-unloadOntologies|
   #:|OWLAPI-unloadOntology|
   #:|OWLAPI-usesIncrementalUpdates|
   #:|OWLAPI-usesSimplifiedProtocol|
   #:owlapi-warning
   #:|OWLAPI-writeFunctionalOntologyFile|
   #:|OWLAPI-writeOntologyFile|
   #:|OWLAPI-writeXMLOntologyFile|
   #:|OWLAsymmetricObjectPropertyAxiom|
   #:|OWLAsymmetricObjectPropertyAxiom-p|
   #:|OWLAxiom|
   #:|OWLAxiom-p|
   #:|OWLAxiomAnnotationAxiom|
   #:|OWLAxiomAnnotationAxiom-p|
   #:|OWLAxiomChange|
   #:|OWLAxiomWithEntitySlotAxiom|
   #:|OWLAxiomWithEntitySlotAxiom-p|
   #:|OWLClass|
   #:|OWLClassAssertionAxiom|
   #:|OWLClassAssertionAxiom-p|
   #:|OWLClassAxiom|
   #:|OWLClassAxiom-p|
   #:|OWLDataPropertyAssertionAxiom|
   #:|OWLDataPropertyAssertionAxiom-p|
   #:|OWLDataPropertyAxiom|
   #:|OWLDataPropertyAxiom-p|
   #:|OWLDataPropertyDomainAxiom|
   #:|OWLDataPropertyDomainAxiom-p|
   #:|OWLDataPropertyRangeAxiom|
   #:|OWLDataPropertyRangeAxiom-p|
   #:|OWLDataSubPropertyAxiom|
   #:|OWLDataSubPropertyAxiom-p|
   #:|OWLDataSubPsropertyAxiom|
   #:|OWLDatatypeDefinitionAxiom|
   #:|OWLDatatypeDefinitionAxiom-p|
   #:|OWLDeclarationAxiom|
   #:|OWLDeclarationAxiom-p|
   #:|OWLDifferentIndividualsAxiom|
   #:|OWLDifferentIndividualsAxiom-p|
   #:|OWLDisjointClassesAxiom|
   #:|OWLDisjointClassesAxiom-p|
   #:|OWLDisjointDataPropertiesAxiom|
   #:|OWLDisjointDataPropertiesAxiom-p|
   #:|OWLDisjointObjectPropertiesAxiom|
   #:|OWLDisjointObjectPropertiesAxiom-p|
   #:|OWLDisjointUnionAxiom|
   #:|OWLDisjointUnionAxiom-p|
   #:|OWLEntityAnnotationAxiom|
   #:|OWLEntityAnnotationAxiom-p|
   #:|OWLEquivalentClassesAxiom|
   #:|OWLEquivalentClassesAxiom-p|
   #:|OWLEquivalentDataPropertiesAxiom|
   #:|OWLEquivalentDataPropertiesAxiom-p|
   #:|OWLEquivalentObjectPropertiesAxiom|
   #:|OWLEquivalentObjectPropertiesAxiom-p|
   #:|OWLFunctionalDataPropertyAxiom|
   #:|OWLFunctionalDataPropertyAxiom-p|
   #:|OWLFunctionalObjectPropertyAxiom|
   #:|OWLFunctionalObjectPropertyAxiom-p|
   #:|OWLHasKeyAxiom|
   #:|OWLHasKeyAxiom-p|
   #:|OWLImplicitDeclarationAxiom|
   #:|OWLImplicitDeclarationAxiom-p|
   #:|OWLImportsDeclarationAxiom|
   #:|OWLImportsDeclarationAxiom-p|
   #:|OWLIndividualAxiom|
   #:|OWLIndividualAxiom-p|
   #:|OWLIndividualRelationshipAxiom|
   #:|OWLIndividualRelationshipAxiom-p|
   #:|OWLInverseFunctionalObjectPropertyAxiom|
   #:|OWLInverseFunctionalObjectPropertyAxiom-p|
   #:|OWLInverseObjectPropertiesAxiom|
   #:|OWLInverseObjectPropertiesAxiom-p|
   #:|OWLIrreflexiveObjectPropertyAxiom|
   #:|OWLIrreflexiveObjectPropertyAxiom-p|
   #:owllink-roles-disjoint-p
   #:owllink-roles-equivalent-p
   #:|OWLLogicalAxiom|
   #:|OWLLogicalAxiom-p|
   #:|OWLNaryClassAxiom|
   #:|OWLNaryClassAxiom-p|
   #:|OWLNaryDataPropertyAxiom|
   #:|OWLNaryDataPropertyAxiom-p|
   #:|OWLNaryIndividualAxiom|
   #:|OWLNaryIndividualAxiom-p|
   #:|OWLNaryObjectPropertyAxiom|
   #:|OWLNaryObjectPropertyAxiom-p|
   #:|OWLNegativeDataPropertyAssertionAxiom|
   #:|OWLNegativeDataPropertyAssertionAxiom-p|
   #:|OWLNegativeObjectPropertyAssertionAxiom|
   #:|OWLNegativeObjectPropertyAssertionAxiom-p|
   #:|OWLObjectPropertyAssertionAxiom|
   #:|OWLObjectPropertyAssertionAxiom-p|
   #:|OWLObjectPropertyAxiom|
   #:|OWLObjectPropertyAxiom-p|
   #:|OWLObjectPropertyChainSubPropertyAxiom|
   #:|OWLObjectPropertyChainSubPropertyAxiom-p|
   #:|OWLObjectPropertyDomainAxiom|
   #:|OWLObjectPropertyDomainAxiom-p|
   #:|OWLObjectPropertyRangeAxiom|
   #:|OWLObjectPropertyRangeAxiom-p|
   #:|OWLObjectSubPropertyAxiom|
   #:|OWLObjectSubPropertyAxiom-p|
   #:|OWLOntologyAnnotationAxiom|
   #:|OWLOntologyAnnotationAxiom-p|
   #:|OWLOntologyChange|
   #:|OWLOntologyURIAttributeAxiom|
   #:|OWLOntologyURIAttributeAxiom-p|
   #:|OWLOntologyVersionDeclarationAxiom|
   #:|OWLOntologyVersionDeclarationAxiom-p|
   #:|OWLPrefixDeclarationAxiom|
   #:|OWLPrefixDeclarationAxiom-p|
   #:|OWLPropertyAxiom|
   #:|OWLPropertyAxiom-p|
   #:|OWLReallyImplicitDeclarationAxiom|
   #:|OWLReallyImplicitDeclarationAxiom-p|
   #:|OWLReflexiveObjectPropertyAxiom|
   #:|OWLReflexiveObjectPropertyAxiom-p|
   #:|OWLSameIndividualsAxiom|
   #:|OWLSameIndividualsAxiom-p|
   #:|OWLSubAnnotationPropertyOfAxiom|
   #:|OWLSubAnnotationPropertyOfAxiom-p|
   #:|OWLSubClassAxiom|
   #:|OWLSubClassAxiom-p|
   #:|OWLSymmetricObjectPropertyAxiom|
   #:|OWLSymmetricObjectPropertyAxiom-p|
   #:|OWLTransitiveObjectPropertyAxiom|
   #:|OWLTransitiveObjectPropertyAxiom-p|
   #:pairwise-equivalent-p
   #:pop-namespace-table
   #:prefix
   #:properties
   #:property
   #:reasoner
   #:reasoner-abox-coherent-p
   #:reasoner-abox-consistent-p
   #:reasoner-abox-realized-p
   #:reasoner-abox-sync
   #:reasoner-add-equation
   #:reasoner-add-implication
   #:reasoner-all-atomic-concepts
   #:reasoner-all-roles
   #:reasoner-annotation-property-p
   #:reasoner-antonym-individuals-p
   #:reasoner-atomic-concept-ancestors
   #:reasoner-atomic-concept-children
   #:reasoner-atomic-concept-descendants
   #:reasoner-atomic-concept-parents
   #:reasoner-atomic-concept-synonyms
   #:reasoner-atomic-role-ancestors
   #:reasoner-atomic-role-children
   #:reasoner-atomic-role-descendants
   #:reasoner-atomic-role-parents
   #:reasoner-atomic-role-synonyms
   #:reasoner-bottom-concept-p
   #:reasoner-bottom-data-property-p
   #:reasoner-bottom-object-property-p
   #:reasoner-classify
   #:reasoner-clear-tbox-and-abox
   #:reasoner-concept-ancestors
   #:reasoner-concept-children
   #:reasoner-concept-descendants
   #:reasoner-concept-equivalent-p
   #:reasoner-concept-p
   #:reasoner-concept-parents
   #:reasoner-concept-satisfiable-p
   #:reasoner-concept-subsumes-p
   #:reasoner-concept-synonyms
   #:reasoner-concepts-disjoint-p
   #:reasoner-concepts-equivalent-p
   #:reasoner-data-property-p
   #:reasoner-delete-prefix-mappings
   #:reasoner-dispose
   #:reasoner-ensure-role
   #:reasoner-equivalent-concepts
   #:reasoner-equivalent-roles
   #:reasoner-feature-p
   #:reasoner-get-abox-language
   #:reasoner-get-annotation-properties
   #:reasoner-get-antonym-individuals
   #:reasoner-get-data-properties
   #:reasoner-get-datatype-bottom-role
   #:reasoner-get-datatype-fillers
   #:reasoner-get-datatype-top-role
   #:reasoner-get-default-namespace-prefix
   #:reasoner-get-disjoint-concepts
   #:reasoner-get-disjoint-data-properties
   #:reasoner-get-disjoint-object-properties
   #:reasoner-get-individual-datatype-fillers
   #:reasoner-get-individual-successors
   #:reasoner-get-instances
   #:reasoner-get-object-bottom-role
   #:reasoner-get-object-properties
   #:reasoner-get-object-top-role
   #:reasoner-get-prefixes
   #:reasoner-get-role-domain
   #:reasoner-get-role-range
   #:reasoner-get-successors
   #:reasoner-get-synonym-individuals
   #:reasoner-get-tbox-language
   #:reasoner-get-types
   #:reasoner-inconsistent-concepts
   #:reasoner-individual-antonyms
   #:reasoner-individual-data-fillers
   #:reasoner-individual-has-data-filler-p
   #:reasoner-individual-instance-p
   #:reasoner-individual-p
   #:reasoner-individual-role-fillers
   #:reasoner-individual-synonyms
   #:reasoner-individuals-related-p
   #:reasoner-individuals-related1-p
   #:reasoner-instance-of-p
   #:reasoner-instantiators
   #:reasoner-inverse-feature-p
   #:reasoner-inverse-roles
   #:reasoner-is-class-p
   #:reasoner-kb-is-consistent-p
   #:reasoner-kb-sync
   #:reasoner-most-specific-instantiators
   #:reasoner-new-tbox-and-abox
   #:reasoner-no-annotation-properties
   #:reasoner-no-data-properties
   #:reasoner-no-object-properties
   #:reasoner-object-property-p
   #:reasoner-only-annotation-properties
   #:reasoner-only-data-properties
   #:reasoner-only-object-properties
   #:reasoner-process-annotation
   #:reasoner-realize
   #:reasoner-realize-abox
   #:reasoner-redundant-import-warning
   #:reasoner-register-prefix
   #:reasoner-remove-prefix
   #:reasoner-reset-prefix-cache
   #:reasoner-retrieve-concept-instances
   #:reasoner-retrieve-individual-filled-roles
   #:reasoner-retrieve-individual-fillers
   #:reasoner-retrieve-individual-predecessors
   #:reasoner-retrieve-individual-told-datatype-fillers
   #:reasoner-role-ancestors
   #:reasoner-role-asymmetric-p
   #:reasoner-role-children
   #:reasoner-role-descendants
   #:reasoner-role-disjoint-p
   #:reasoner-role-equivalent-p
   #:reasoner-role-functional-p
   #:reasoner-role-inverse-functional-p
   #:reasoner-role-irreflexive-p
   #:reasoner-role-parents
   #:reasoner-role-reflexive-p
   #:reasoner-role-satisfiable-p
   #:reasoner-role-subsumes-p
   #:reasoner-role-symmetric-p
   #:reasoner-role-synonyms
   #:reasoner-role-transitive-p
   #:reasoner-sync
   #:reasoner-synonym-individuals-p
   #:reasoner-syntax-message
   #:reasoner-taxonomy
   #:reasoner-tbox-classified-p
   #:reasoner-tbox-sync
   #:reasoner-top-concept-p
   #:reasoner-top-data-property-p
   #:reasoner-top-object-property-p
   #:referenced-annotaiton-properties
   #:referenced-annotation-properties
   #:referenced-concepts
   #:referenced-data-properties
   #:referenced-datatypes
   #:referenced-individuals
   #:referenced-object-properties
   #:register-additional-ontology-name
   #:rel-data-property
   #:rel-object-property
   #:remove-axiom
   #:remove-axioms
   #:reset-axiom-counter
   #:reset-id-counter
   #:role
   #:role-name
   #:role1
   #:role2
   #:roles
   #:rules
   #:second-object-property
   #:secondary-p
   #:self-reference
   #:set-equal
   #:set-primary-ontology-name
   #:shrink-whitespaces
   #:some
   #:start-with-#-p
   #:string-substitute
   #:string-to-boolean
   #:string<>
   #:string=
   #:sub-class
   #:sub-data-property
   #:sub-object-property
   #:sub-property
   #:subclass
   #:subject
   #:super-class
   #:super-property
   #:superclass
   #:superclasses
   #:to-be-implemented
   #:to-keyword
   #:told
   #:tree-find
   #:unequal
   #:unload-axiom
   #:unload-axiom1
   #:unload-axioms
   #:unload-ontology
   #:unparse
   #:uri
   #:used-constructors
   #:warning-ignored-axiom
   #:warning-redundant-axiom
   #:whitespace-char-p
   #:with-#
   #:with-current-owllink-kb
   #:with-ids-p
   #:with-lookup-mode
   #:with-reasoner
   #:with-transient-axiom-mode
   #:without-#
   #:without-bottom
   #:without-bottom-data-property
   #:without-bottom-object-property
   #:without-colon
   #:without-starting-#
   #:without-top
   #:without-top-and-bottom
   #:without-top-and-bottom-data-properties
   #:without-top-and-bottom-object-properties
   #:without-top-data-property
   #:without-top-object-property))

